/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.okaynet.andare.testes;

import java.io.FileOutputStream;
import java.util.Date;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Erick
 */
public class FirstPdf {

    private static String FILE = "c:/temp/FirstPdf.pdf";
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);

    public static void main(String[] args) {
        try {
            Document document = new Document() {
            };
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();

            addTitlePage(document);
           
            document.close();
            File pdf = new File("c:/temp/FirstPdf.pdf");
            try {
                Desktop.getDesktop().open(pdf);
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Erro no Desktop: " + ex);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    private static void addTitlePage(Document document)
            throws DocumentException, BadElementException {
        Paragraph preface = new Paragraph();
        try {
            // Lets write a big header
            Image  jpg = Image.getInstance("C:\\Users\\Erick\\Downloads\\logoVetor2.png");
            document.add(jpg);
        } catch (IOException ex) {
            Logger.getLogger(FirstPdf.class.getName()).log(Level.SEVERE, null, ex);
        }
        preface.add(new Paragraph("Ordem de servi√ßo", catFont));
        preface.setAlignment(Element.ALIGN_RIGHT);

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph("Gerado as " + new Date(),smallBold));
        addEmptyLine(preface, 3);

        PdfPTable table = new PdfPTable(3);

        table.setHeaderRows(1);

        table.addCell("Nome:");
        table.addCell("Erick William dos Santos");
        table.addCell("Funcionario:");
        table.addCell("Elizeu Arantes");
        table.addCell("Acessorios:");
        table.addCell("Notebook Acer A56");


        document.add(preface);
        document.add(table);
        // Start a new page
        document.newPage();
    }


   
    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}
