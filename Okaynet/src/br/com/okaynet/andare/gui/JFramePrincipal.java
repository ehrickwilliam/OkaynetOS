/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.okaynet.andare.gui;

import br.com.okaynet.andare.bibliotecas.Util;
import br.com.okaynet.andare.conexao.Conexao;
import br.com.okaynet.andare.conexao.Data;
import br.com.okaynet.andare.conexao.HibernateConfiguration;
import br.com.okaynet.andare.conexao.TransactionManager;
import br.com.okaynet.andare.daos.DaoClienteFisico;
import br.com.okaynet.andare.daos.DaoClienteJuridico;
import br.com.okaynet.andare.daos.DaoFuncionario;
import br.com.okaynet.andare.daos.DaoOrdemServico;
import br.com.okaynet.andare.model.ClienteFisico;
import br.com.okaynet.andare.model.ClienteJuridico;
import br.com.okaynet.andare.model.Funcionario;
import br.com.okaynet.andare.model.OrdemServico;
import br.com.okaynet.andare.model.Pessoa;
import br.com.okaynet.andare.model.Usuarios;
import br.com.okaynet.andare.testes.testeParametro;
import br.com.okaynet.andare.testes.testeRelatorio;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author ehrick
 */
public class JFramePrincipal extends javax.swing.JFrame {

    /**
     * Creates new form JFramePrincipal
     */
    private DefaultTableModel model;
    private String styleModelOrdem[] = new String[]{"ID", "Cliente", "Status Serviço", "Status", "Valor", "Data de Cadastro", "Data de Vencimento"};
    private List<OrdemServico> orderns1;
    private List<OrdemServico> orderns2;

    public JFramePrincipal() {

        initComponents();
        Usuarios autenticado = (Usuarios) Data.hash.get("usuario");
        jLabelAdmin.setText("Logado como: " + autenticado.getUsuario());
        popularTabelaNaoConcluidas();
        popularTabelaNaoRecebidas();

        mudarFavicon();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAguardando = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePagamento = new javax.swing.JTable();
        jButtonAlterarOS = new javax.swing.JButton();
        jButtonUsuario4 = new javax.swing.JButton();
        jButtonVisualizarOS = new javax.swing.JButton();
        jLabelAdmin = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu6 = new javax.swing.JMenu();
        jMenuItemTodosClientes = new javax.swing.JMenuItem();
        jMenuItemNovoClienteJuridico = new javax.swing.JMenuItem();
        jMenuItemNovoClienteFisico = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemTodosFuncionarios = new javax.swing.JMenuItem();
        jMenuItemNovoFuncionario = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItemOsMes = new javax.swing.JMenuItem();
        jMenuItemNovaOs = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItemVencidas = new javax.swing.JMenuItem();
        jMenuItemOsMesAdmin = new javax.swing.JMenuItem();
        jMenuItemTodasOsAdmin = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemUserCom = new javax.swing.JMenuItem();
        jMenuItemAddUser = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem5.setText("jMenuItem5");

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Okaynet Informática - OS Manager");
        setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        setMinimumSize(new java.awt.Dimension(970, 610));
        setName("FramePrincipal"); // NOI18N

        jTableAguardando.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableAguardando);

        jTablePagamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTablePagamento);

        jButtonAlterarOS.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jButtonAlterarOS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/108.png"))); // NOI18N
        jButtonAlterarOS.setText("Alterar Registro");
        jButtonAlterarOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarOSActionPerformed(evt);
            }
        });

        jButtonUsuario4.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jButtonUsuario4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/129.png"))); // NOI18N
        jButtonUsuario4.setText("Visualizar Registro para Impressão");
        jButtonUsuario4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUsuario4ActionPerformed(evt);
            }
        });

        jButtonVisualizarOS.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jButtonVisualizarOS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/138.png"))); // NOI18N
        jButtonVisualizarOS.setText("Visualizar Registro");
        jButtonVisualizarOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVisualizarOSActionPerformed(evt);
            }
        });

        jLabelAdmin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelAdmin.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelAdmin.setText("Administrador");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel3.setText("Ordens de serviço aguardando para serem concluidas:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel4.setText("Ordens de serviço vencidas aguardando recebimento:");

        jMenuBar1.setToolTipText("Menu Princípal");
        jMenuBar1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jMenuBar1.setPreferredSize(new java.awt.Dimension(569, 25));

        jMenu6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/cliente_fun.png"))); // NOI18N
        jMenu6.setText("Clientes");
        jMenu6.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N

        jMenuItemTodosClientes.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemTodosClientes.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jMenuItemTodosClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/book.png"))); // NOI18N
        jMenuItemTodosClientes.setText("Todos os Clientes");
        jMenuItemTodosClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTodosClientesActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItemTodosClientes);

        jMenuItemNovoClienteJuridico.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNovoClienteJuridico.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jMenuItemNovoClienteJuridico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/book_add.png"))); // NOI18N
        jMenuItemNovoClienteJuridico.setText("Adicionar Novo Cliente Juridico");
        jMenuItemNovoClienteJuridico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNovoClienteJuridicoActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItemNovoClienteJuridico);

        jMenuItemNovoClienteFisico.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNovoClienteFisico.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jMenuItemNovoClienteFisico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/book_add.png"))); // NOI18N
        jMenuItemNovoClienteFisico.setText("Adicionar Novo Cliente Fisico");
        jMenuItemNovoClienteFisico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNovoClienteFisicoActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItemNovoClienteFisico);

        jMenuBar1.add(jMenu6);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/user_male_16.png"))); // NOI18N
        jMenu1.setText("Funcionarios");
        jMenu1.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N

        jMenuItemTodosFuncionarios.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_4, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemTodosFuncionarios.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jMenuItemTodosFuncionarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/building.png"))); // NOI18N
        jMenuItemTodosFuncionarios.setText("Todos os Funcionarios");
        jMenuItemTodosFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTodosFuncionariosActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemTodosFuncionarios);

        jMenuItemNovoFuncionario.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_5, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNovoFuncionario.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jMenuItemNovoFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/building_add.png"))); // NOI18N
        jMenuItemNovoFuncionario.setText("Adicionar Novo Funcionario");
        jMenuItemNovoFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNovoFuncionarioActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemNovoFuncionario);

        jMenuBar1.add(jMenu1);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/ordem.png"))); // NOI18N
        jMenu2.setText("Ordem de Serviço (OS)");
        jMenu2.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N

        jMenuItemOsMes.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_6, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemOsMes.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jMenuItemOsMes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/application_form.png"))); // NOI18N
        jMenuItemOsMes.setText("Todas as OS do mês");
        jMenuItemOsMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOsMesActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemOsMes);

        jMenuItemNovaOs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_7, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNovaOs.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jMenuItemNovaOs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/application_form_add.png"))); // NOI18N
        jMenuItemNovaOs.setText("Nova OS");
        jMenuItemNovaOs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNovaOsActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemNovaOs);

        jMenuBar1.add(jMenu2);

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/administrativo.png"))); // NOI18N
        jMenu3.setText("Administrativo");
        jMenu3.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N

        jMenuItemVencidas.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jMenuItemVencidas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/015.png"))); // NOI18N
        jMenuItemVencidas.setText("OS Vencidas");
        jMenuItemVencidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemVencidasActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemVencidas);

        jMenuItemOsMesAdmin.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jMenuItemOsMesAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/038.png"))); // NOI18N
        jMenuItemOsMesAdmin.setText("Todas as OS do Mês");
        jMenuItemOsMesAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOsMesAdminActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemOsMesAdmin);

        jMenuItemTodasOsAdmin.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jMenuItemTodasOsAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/057.png"))); // NOI18N
        jMenuItemTodasOsAdmin.setText("Todas as OS");
        jMenuItemTodasOsAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTodasOsAdminActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemTodasOsAdmin);
        jMenu3.add(jSeparator1);

        jMenuItemUserCom.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jMenuItemUserCom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/136.png"))); // NOI18N
        jMenuItemUserCom.setText("Todos os Usuários ");
        jMenuItemUserCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUserComActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemUserCom);

        jMenuItemAddUser.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jMenuItemAddUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/132.png"))); // NOI18N
        jMenuItemAddUser.setText("Novo Usuário");
        jMenuItemAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAddUserActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemAddUser);
        jMenu3.add(jSeparator2);

        jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_8, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem13.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jMenuItem13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/068.png"))); // NOI18N
        jMenuItem13.setText("Alterar Minha Senha");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem13);

        jMenuBar1.add(jMenu3);

        jMenu4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/003.png"))); // NOI18N
        jMenu4.setText("Sair");
        jMenu4.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAlterarOS)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonVisualizarOS)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUsuario4)
                        .addGap(171, 171, 171)
                        .addComponent(jLabelAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonUsuario4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAlterarOS, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonVisualizarOS, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAdmin))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemTodosClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTodosClientesActionPerformed
        // TODO add your handling code here:
        Util.abrirDialogCentralizado(new JDialogPesquisaCliente(this, true, null));
    }//GEN-LAST:event_jMenuItemTodosClientesActionPerformed

    private void jMenuItemNovoClienteJuridicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNovoClienteJuridicoActionPerformed
        // TODO add your handling code here:
        Util.abrirDialogCentralizado(new JDialogCadastroClienteJuridico(this, true));
    }//GEN-LAST:event_jMenuItemNovoClienteJuridicoActionPerformed

    private void jMenuItemNovoClienteFisicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNovoClienteFisicoActionPerformed
        // TODO add your handling code here:
        Util.abrirDialogCentralizado(new JDialogCadastroClienteFisico(this, true));
    }//GEN-LAST:event_jMenuItemNovoClienteFisicoActionPerformed

    private void jMenuItemNovoFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNovoFuncionarioActionPerformed
        // TODO add your handling code here:
        Util.abrirDialogCentralizado(new JDialogCadastroFuncionario(this, true));
    }//GEN-LAST:event_jMenuItemNovoFuncionarioActionPerformed

    private void jMenuItemTodosFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTodosFuncionariosActionPerformed
        // TODO add your handling code here:
        Util.abrirDialogCentralizado(new JDialogPesquisaFuncionario(this, true));
    }//GEN-LAST:event_jMenuItemTodosFuncionariosActionPerformed

    private void jMenuItemOsMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOsMesActionPerformed
        // TODO add your handling code here:
        Util.abrirDialogCentralizado(new JDialogPesquisaOrdemMes(this, true));
        popularTabelaNaoConcluidas();
        popularTabelaNaoRecebidas();
    }//GEN-LAST:event_jMenuItemOsMesActionPerformed

    private void jMenuItemNovaOsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNovaOsActionPerformed
        // TODO add your handling code here:
        TransactionManager.beginTransaction();
        List<Funcionario> fun = new DaoFuncionario().listar("", "nome");
        TransactionManager.commit();

        List<Pessoa> pessoa = new ArrayList<Pessoa>();
        TransactionManager.beginTransaction();
        List<ClienteFisico> clientesF = new DaoClienteFisico().listar("", "nome");
        List<ClienteJuridico> clientesJ = new DaoClienteJuridico().listar("", "razaoSocial");
        TransactionManager.commit();

        for (ClienteJuridico clienteJuridico : clientesJ) {
            pessoa.add(clienteJuridico);
        }

        for (ClienteFisico clienteFisico : clientesF) {
            pessoa.add(clienteFisico);
        }

        if (!fun.isEmpty() && !pessoa.isEmpty()) {
            Util.abrirDialogCentralizado(new JDialogCadastroOrdem(this, true));
            popularTabelaNaoConcluidas();
            popularTabelaNaoRecebidas();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Você não realizou o cadastro de clientes e funcionarios.");
        }
    }//GEN-LAST:event_jMenuItemNovaOsActionPerformed

    private void jMenuItemAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAddUserActionPerformed
        // TODO add your handling code here:
        Util.abrirDialogCentralizado(new JDialogCadastroUsuario(this, true));
    }//GEN-LAST:event_jMenuItemAddUserActionPerformed

    private void jMenuItemUserComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUserComActionPerformed
        // TODO add your handling code here:
        Util.abrirDialogCentralizado(new JDialogPesquisaUsuarios(this, true));
    }//GEN-LAST:event_jMenuItemUserComActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // TODO add your handling code here:
        Util.abrirDialogCentralizado(new JDialogAlterarSenhaCadastroFuncionario(this, true));
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItemVencidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemVencidasActionPerformed
        // TODO add your handling code here:
        Util.abrirDialogCentralizado(new JDialogPesquisaOrdemVencidas(this, true));
        popularTabelaNaoConcluidas();
        popularTabelaNaoRecebidas();
    }//GEN-LAST:event_jMenuItemVencidasActionPerformed

    private void jMenuItemOsMesAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOsMesAdminActionPerformed
        // TODO add your handling code here:
        Util.abrirDialogCentralizado(new JDialogPesquisaOrdemMes(this, true));
        popularTabelaNaoConcluidas();
        popularTabelaNaoRecebidas();
    }//GEN-LAST:event_jMenuItemOsMesAdminActionPerformed

    private void jMenuItemTodasOsAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTodasOsAdminActionPerformed
        // TODO add your handling code here:
        Util.abrirDialogCentralizado(new JDialogPesquisaOrdemTodas(this, true));
        popularTabelaNaoConcluidas();
        popularTabelaNaoRecebidas();
    }//GEN-LAST:event_jMenuItemTodasOsAdminActionPerformed

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        // TODO add your handling code here:
        Util.abrirDialogCentralizadoForm(new JFrameLogin());
        Data.hash.remove("usuario");
        this.dispose();
    }//GEN-LAST:event_jMenu4MouseClicked

    private void jButtonAlterarOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarOSActionPerformed
        // TODO add your handling code here:

        if ((jTableAguardando.getSelectedRow() != -1) || (jTablePagamento.getSelectedRow() != -1)) {
            if ((jTableAguardando.getSelectedRow() != -1) && (jTablePagamento.getSelectedRow() < 0)) {
                Data.hash.put("ordem", orderns1.get(jTableAguardando.getSelectedRow()));
                Util.abrirDialogCentralizado(new JDialogCadastroOrdemPopUp(null, true));
                popularTabelaNaoConcluidas();
                popularTabelaNaoRecebidas();
            } else if ((jTablePagamento.getSelectedRow() != -1) && (jTableAguardando.getSelectedRow() < 0)) {
                Data.hash.put("ordem", orderns2.get(jTablePagamento.getSelectedRow()));
                Util.abrirDialogCentralizado(new JDialogCadastroOrdemPopUp(null, true));
                popularTabelaNaoConcluidas();
                popularTabelaNaoRecebidas();
            } else if ((jTablePagamento.getSelectedRow() != -1) && (jTableAguardando.getSelectedRow() != -1)) {
                JOptionPane.showMessageDialog(rootPane, "Selecione apenas uma tabela!");
                popularTabelaNaoConcluidas();
                popularTabelaNaoRecebidas();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Nenhum registro selecionado!");
        }

    }//GEN-LAST:event_jButtonAlterarOSActionPerformed

    private void jButtonUsuario4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUsuario4ActionPerformed
        // TODO add your handling code here:

        if ((jTableAguardando.getSelectedRow() != -1) || (jTablePagamento.getSelectedRow() != -1)) {
            if ((jTableAguardando.getSelectedRow() != -1) && (jTablePagamento.getSelectedRow() < 0)) {

                OrdemServico orderView = orderns1.get(jTableAguardando.getSelectedRow());
                Connection conexao;
                try {
                    conexao = Conexao.getConnection();
                    conexao.createStatement().execute("use " + HibernateConfiguration.getBase());
                    ResultSet executeQuery = conexao.createStatement().executeQuery("SELECT\n"
                            + "     ordemservico.`id` AS ordemservico_id,\n"
                            + "     ordemservico.`acessorio` AS ordemservico_acessorio,\n"
                            + "     ordemservico.`agenciaCheque` AS ordemservico_agenciaCheque,\n"
                            + "     ordemservico.`banco` AS ordemservico_banco,\n"
                            + "     ordemservico.`cnpjDoCheque` AS ordemservico_cnpjDoCheque,\n"
                            + "     ordemservico.`contaCheque` AS ordemservico_contaCheque,\n"
                            + "     ordemservico.`dataCadastro` AS ordemservico_dataCadastro,\n"
                            + "     ordemservico.`dataCheque` AS ordemservico_dataCheque,\n"
                            + "     ordemservico.`dataVencimento` AS ordemservico_dataVencimento,\n"
                            + "     ordemservico.`deslocamento` AS ordemservico_deslocamento,\n"
                            + "     ordemservico.`equipamento` AS ordemservico_equipamento,\n"
                            + "     ordemservico.`item1` AS ordemservico_item1,\n"
                            + "     ordemservico.`item2` AS ordemservico_item2,\n"
                            + "     ordemservico.`item3` AS ordemservico_item3,\n"
                            + "     ordemservico.`item4` AS ordemservico_item4,\n"
                            + "     ordemservico.`juros` AS ordemservico_juros,\n"
                            + "     ordemservico.`marca` AS ordemservico_marca,\n"
                            + "     ordemservico.`modelo` AS ordemservico_modelo,\n"
                            + "     ordemservico.`nomeDoCheque` AS ordemservico_nomeDoCheque,\n"
                            + "     ordemservico.`parcelas` AS ordemservico_parcelas,\n"
                            + "     ordemservico.`parcelasRestantes` AS ordemservico_parcelasRestantes,\n"
                            + "     ordemservico.`problemaInformado` AS ordemservico_problemaInformado,\n"
                            + "     ordemservico.`serie` AS ordemservico_serie,\n"
                            + "     ordemservico.`status` AS ordemservico_status,\n"
                            + "     ordemservico.`statusDoServivo` AS ordemservico_statusDoServivo,\n"
                            + "     ordemservico.`tipoCheque` AS ordemservico_tipoCheque,\n"
                            + "     ordemservico.`valor1` AS ordemservico_valor1,\n"
                            + "     ordemservico.`valor2` AS ordemservico_valor2,\n"
                            + "     ordemservico.`valor3` AS ordemservico_valor3,\n"
                            + "     ordemservico.`valor4` AS ordemservico_valor4,\n"
                            + "     ordemservico.`valorDoCheque` AS ordemservico_valorDoCheque,\n"
                            + "     ordemservico.`valorPorExtenso` AS ordemservico_valorPorExtenso,\n"
                            + "     ordemservico.`valorTotal` AS ordemservico_valorTotal,\n"
                            + "     ordemservico.`cliente_id` AS ordemservico_cliente_id,\n"
                            + "     ordemservico.`endereco_id` AS ordemservico_endereco_id,\n"
                            + "     ordemservico.`funcionario_id` AS ordemservico_funcionario_id,\n"
                            + "     endereco.`id` AS endereco_id,\n"
                            + "     endereco.`bairro` AS endereco_bairro,\n"
                            + "     endereco.`cep` AS endereco_cep,\n"
                            + "     endereco.`cidade` AS endereco_cidade,\n"
                            + "     endereco.`complemento` AS endereco_complemento,\n"
                            + "     endereco.`logradouro` AS endereco_logradouro,\n"
                            + "     endereco.`numero` AS endereco_numero,\n"
                            + "     endereco.`telefone1` AS endereco_telefone1,\n"
                            + "     endereco.`telefone2` AS endereco_telefone2,\n"
                            + "     endereco.`telefone3` AS endereco_telefone3,\n"
                            + "     endereco.`tipoLogradouro` AS endereco_tipoLogradouro,\n"
                            + "     pessoa.`DTYPE` AS pessoa_DTYPE,\n"
                            + "     pessoa.`id` AS pessoa_id,\n"
                            + "     pessoa.`dataCadastro` AS pessoa_dataCadastro,\n"
                            + "     pessoa.`email` AS pessoa_email,\n"
                            + "     pessoa.`cpf` AS pessoa_cpf,\n"
                            + "     pessoa.`nascimento` AS pessoa_nascimento,\n"
                            + "     pessoa.`nome` AS pessoa_nome,\n"
                            + "     pessoa.`rg` AS pessoa_rg,\n"
                            + "     pessoa.`sobrenome` AS pessoa_sobrenome,\n"
                            + "     pessoa.`cnpj` AS pessoa_cnpj,\n"
                            + "     pessoa.`inscricao` AS pessoa_inscricao,\n"
                            + "     pessoa.`razaoSocial` AS pessoa_razaoSocial,\n"
                            + "     pessoa.`responsavel` AS pessoa_responsavel,\n"
                            + "     pessoa.`endereco_id` AS pessoa_endereco_id\n"
                            + "FROM\n"
                            + "     endereco,ordemservico,pessoa\n"
                            + "WHERE\n"
                            + "     endereco.id = pessoa.endereco_id AND ordemservico.cliente_id = pessoa.id AND ordemservico.id=" + orderView.getId());

                    JRResultSetDataSource jrRS = new JRResultSetDataSource(executeQuery);

                    String jasperPrint;
                    try {
                        JDialog viewer = new JDialog(new javax.swing.JFrame(), "Visualização da Ordem " + orderView.getId(), true);
                        viewer.setSize(900, 600);
                        viewer.setLocationRelativeTo(null);
                        URL url = this.getClass().getResource("/br/com/okaynet/andare/icons/faststone.png");
                        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);

                        viewer.setIconImage(imagemTitulo);

                        String osName = System.getProperty("os.name");
                       
                        if (osName.toLowerCase().contains("windows")) {
                            jasperPrint = JasperFillManager.fillReportToFile("C:\\okaynet\\reportOS.jasper", null, jrRS); //Aqui vc chama o relatório

                        } else {
                            jasperPrint = JasperFillManager.fillReportToFile("/tmp/okaynet/reportOS.jasper", null, jrRS); //Aqui vc chama o relatório

                        }

                        JasperViewer jrviewer = new JasperViewer(jasperPrint, false, false);

                        viewer.getContentPane().add(jrviewer.getContentPane());
                        viewer.setVisible(true);
                    } catch (JRException ex) {
                        Logger.getLogger(testeParametro.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(testeRelatorio.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else if ((jTablePagamento.getSelectedRow() != -1) && (jTableAguardando.getSelectedRow() < 0)) {
                OrdemServico orderView = orderns2.get(jTablePagamento.getSelectedRow());
                Connection conexao;
                try {
                    conexao = Conexao.getConnection();
                    conexao.createStatement().execute("use " + HibernateConfiguration.getBase());
                    ResultSet executeQuery = conexao.createStatement().executeQuery("SELECT\n"
                            + "     ordemservico.`id` AS ordemservico_id,\n"
                            + "     ordemservico.`acessorio` AS ordemservico_acessorio,\n"
                            + "     ordemservico.`agenciaCheque` AS ordemservico_agenciaCheque,\n"
                            + "     ordemservico.`banco` AS ordemservico_banco,\n"
                            + "     ordemservico.`cnpjDoCheque` AS ordemservico_cnpjDoCheque,\n"
                            + "     ordemservico.`contaCheque` AS ordemservico_contaCheque,\n"
                            + "     ordemservico.`dataCadastro` AS ordemservico_dataCadastro,\n"
                            + "     ordemservico.`dataCheque` AS ordemservico_dataCheque,\n"
                            + "     ordemservico.`dataVencimento` AS ordemservico_dataVencimento,\n"
                            + "     ordemservico.`deslocamento` AS ordemservico_deslocamento,\n"
                            + "     ordemservico.`equipamento` AS ordemservico_equipamento,\n"
                            + "     ordemservico.`item1` AS ordemservico_item1,\n"
                            + "     ordemservico.`item2` AS ordemservico_item2,\n"
                            + "     ordemservico.`item3` AS ordemservico_item3,\n"
                            + "     ordemservico.`item4` AS ordemservico_item4,\n"
                            + "     ordemservico.`juros` AS ordemservico_juros,\n"
                            + "     ordemservico.`marca` AS ordemservico_marca,\n"
                            + "     ordemservico.`modelo` AS ordemservico_modelo,\n"
                            + "     ordemservico.`nomeDoCheque` AS ordemservico_nomeDoCheque,\n"
                            + "     ordemservico.`parcelas` AS ordemservico_parcelas,\n"
                            + "     ordemservico.`parcelasRestantes` AS ordemservico_parcelasRestantes,\n"
                            + "     ordemservico.`problemaInformado` AS ordemservico_problemaInformado,\n"
                            + "     ordemservico.`serie` AS ordemservico_serie,\n"
                            + "     ordemservico.`status` AS ordemservico_status,\n"
                            + "     ordemservico.`statusDoServivo` AS ordemservico_statusDoServivo,\n"
                            + "     ordemservico.`tipoCheque` AS ordemservico_tipoCheque,\n"
                            + "     ordemservico.`valor1` AS ordemservico_valor1,\n"
                            + "     ordemservico.`valor2` AS ordemservico_valor2,\n"
                            + "     ordemservico.`valor3` AS ordemservico_valor3,\n"
                            + "     ordemservico.`valor4` AS ordemservico_valor4,\n"
                            + "     ordemservico.`valorDoCheque` AS ordemservico_valorDoCheque,\n"
                            + "     ordemservico.`valorPorExtenso` AS ordemservico_valorPorExtenso,\n"
                            + "     ordemservico.`valorTotal` AS ordemservico_valorTotal,\n"
                            + "     ordemservico.`cliente_id` AS ordemservico_cliente_id,\n"
                            + "     ordemservico.`endereco_id` AS ordemservico_endereco_id,\n"
                            + "     ordemservico.`funcionario_id` AS ordemservico_funcionario_id,\n"
                            + "     endereco.`id` AS endereco_id,\n"
                            + "     endereco.`bairro` AS endereco_bairro,\n"
                            + "     endereco.`cep` AS endereco_cep,\n"
                            + "     endereco.`cidade` AS endereco_cidade,\n"
                            + "     endereco.`complemento` AS endereco_complemento,\n"
                            + "     endereco.`logradouro` AS endereco_logradouro,\n"
                            + "     endereco.`numero` AS endereco_numero,\n"
                            + "     endereco.`telefone1` AS endereco_telefone1,\n"
                            + "     endereco.`telefone2` AS endereco_telefone2,\n"
                            + "     endereco.`telefone3` AS endereco_telefone3,\n"
                            + "     endereco.`tipoLogradouro` AS endereco_tipoLogradouro,\n"
                            + "     pessoa.`DTYPE` AS pessoa_DTYPE,\n"
                            + "     pessoa.`id` AS pessoa_id,\n"
                            + "     pessoa.`dataCadastro` AS pessoa_dataCadastro,\n"
                            + "     pessoa.`email` AS pessoa_email,\n"
                            + "     pessoa.`cpf` AS pessoa_cpf,\n"
                            + "     pessoa.`nascimento` AS pessoa_nascimento,\n"
                            + "     pessoa.`nome` AS pessoa_nome,\n"
                            + "     pessoa.`rg` AS pessoa_rg,\n"
                            + "     pessoa.`sobrenome` AS pessoa_sobrenome,\n"
                            + "     pessoa.`cnpj` AS pessoa_cnpj,\n"
                            + "     pessoa.`inscricao` AS pessoa_inscricao,\n"
                            + "     pessoa.`razaoSocial` AS pessoa_razaoSocial,\n"
                            + "     pessoa.`responsavel` AS pessoa_responsavel,\n"
                            + "     pessoa.`endereco_id` AS pessoa_endereco_id\n"
                            + "FROM\n"
                            + "     endereco,ordemservico,pessoa\n"
                            + "WHERE\n"
                            + "     endereco.id = pessoa.endereco_id AND ordemservico.cliente_id = pessoa.id AND ordemservico.id=" + orderView.getId());

                    JRResultSetDataSource jrRS = new JRResultSetDataSource(executeQuery);

                    String jasperPrint;
                    try {
                        JDialog viewer = new JDialog(new javax.swing.JFrame(), "Visualização da Ordem " + orderView.getId(), true);
                        viewer.setSize(900, 600);
                        viewer.setLocationRelativeTo(null);
                        URL url = this.getClass().getResource("/br/com/okaynet/andare/icons/faststone.png");
                        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
                        viewer.setIconImage(imagemTitulo);
                        jasperPrint = JasperFillManager.fillReportToFile("C:\\Okaynet\\reportOS.jasper", null, jrRS); //Aqui vc chama o relatório

                        JasperViewer jrviewer = new JasperViewer(jasperPrint, false, false);

                        viewer.getContentPane().add(jrviewer.getContentPane());
                        viewer.setVisible(true);
                    } catch (JRException ex) {
                        Logger.getLogger(testeParametro.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(testeRelatorio.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if ((jTablePagamento.getSelectedRow() != -1) && (jTableAguardando.getSelectedRow() != -1)) {
                JOptionPane.showMessageDialog(rootPane, "Selecione apenas uma tabela!");
                popularTabelaNaoConcluidas();
                popularTabelaNaoRecebidas();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Nenhum registro selecionado!");
        }


    }//GEN-LAST:event_jButtonUsuario4ActionPerformed

    private void jButtonVisualizarOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVisualizarOSActionPerformed
        // TODO add your handling code here:
        if ((jTableAguardando.getSelectedRow() != -1) || (jTablePagamento.getSelectedRow() != -1)) {
            if ((jTableAguardando.getSelectedRow() != -1) && (jTablePagamento.getSelectedRow() < 0)) {
                Data.hash.put("ordem", orderns1.get(jTableAguardando.getSelectedRow()));
                Util.abrirDialogCentralizado(new JDialogViewOrdemServico(null, true));
                popularTabelaNaoConcluidas();
                popularTabelaNaoRecebidas();
            } else if ((jTablePagamento.getSelectedRow() != -1) && (jTableAguardando.getSelectedRow() < 0)) {
                Data.hash.put("ordem", orderns2.get(jTablePagamento.getSelectedRow()));
                Util.abrirDialogCentralizado(new JDialogViewOrdemServico(null, true));
                popularTabelaNaoConcluidas();
                popularTabelaNaoRecebidas();
            } else if ((jTablePagamento.getSelectedRow() != -1) && (jTableAguardando.getSelectedRow() != -1)) {
                JOptionPane.showMessageDialog(rootPane, "Selecione apenas uma tabela!");
            } else if ((jTablePagamento.getSelectedRow() != -1) && (jTableAguardando.getSelectedRow() != -1)) {
                JOptionPane.showMessageDialog(rootPane, "Selecione apenas uma tabela!");
                popularTabelaNaoConcluidas();
                popularTabelaNaoRecebidas();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Nenhum registro selecionado!");
        }
    }//GEN-LAST:event_jButtonVisualizarOSActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFramePrincipal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAlterarOS;
    private javax.swing.JButton jButtonUsuario4;
    private javax.swing.JButton jButtonVisualizarOS;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelAdmin;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItemAddUser;
    private javax.swing.JMenuItem jMenuItemNovaOs;
    private javax.swing.JMenuItem jMenuItemNovoClienteFisico;
    private javax.swing.JMenuItem jMenuItemNovoClienteJuridico;
    private javax.swing.JMenuItem jMenuItemNovoFuncionario;
    private javax.swing.JMenuItem jMenuItemOsMes;
    private javax.swing.JMenuItem jMenuItemOsMesAdmin;
    private javax.swing.JMenuItem jMenuItemTodasOsAdmin;
    private javax.swing.JMenuItem jMenuItemTodosClientes;
    private javax.swing.JMenuItem jMenuItemTodosFuncionarios;
    private javax.swing.JMenuItem jMenuItemUserCom;
    private javax.swing.JMenuItem jMenuItemVencidas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTable jTableAguardando;
    private javax.swing.JTable jTablePagamento;
    // End of variables declaration//GEN-END:variables

    private void mudarFavicon() {
        URL url = this.getClass().getResource("/br/com/okaynet/andare/icons/faststone.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
    }

    private void popularTabelaNaoRecebidas() {
        TransactionManager.beginTransaction();
        orderns2 = new DaoOrdemServico().obterVencidas();
        TransactionManager.commit();
        prencherOrdemNaoRecebidas();
    }

    private void prencherOrdemNaoRecebidas() {
        if (orderns2 != null && !orderns2.isEmpty()) {
            model = new DefaultTableModel();
            model.setColumnIdentifiers(styleModelOrdem);
            for (OrdemServico ordem : orderns2) {
                model.addRow(new Object[]{ordem.getId(), ordem.getCliente(), ordem.getStatusDoServivo(), ordem.getStatus(), ordem.getValorTotal(), Util.calendarToString(ordem.getDataCadastro()), Util.calendarToString(ordem.getDataVencimento())});
            }

            jTablePagamento.setModel(model);
        } else {
            model = new DefaultTableModel();
            model.setColumnIdentifiers(styleModelOrdem);

            jTablePagamento.setModel(model);
        }
    }

    private void popularTabelaNaoConcluidas() {
        TransactionManager.beginTransaction();
        orderns1 = new DaoOrdemServico().obterOrdernsNaoConcluidas();
        TransactionManager.commit();
        prencherOrdemNaoConcluidas();
    }

    private void prencherOrdemNaoConcluidas() {
        if (orderns1 != null && !orderns1.isEmpty()) {
            model = new DefaultTableModel();
            model.setColumnIdentifiers(styleModelOrdem);
            for (OrdemServico ordem : orderns1) {
                model.addRow(new Object[]{ordem.getId(), ordem.getCliente(), ordem.getStatusDoServivo(), ordem.getStatus(), ordem.getValorTotal(), Util.calendarToString(ordem.getDataCadastro()), Util.calendarToString(ordem.getDataVencimento())});
            }

            jTableAguardando.setModel(model);
        } else {
            model = new DefaultTableModel();
            model.setColumnIdentifiers(styleModelOrdem);

            jTableAguardando.setModel(model);
        }
    }

    private void deletar(OrdemServico o) {

        TransactionManager.beginTransaction();
        OrdemServico funcionarioApagar = new DaoOrdemServico().obterPorId(o.getId());
        new DaoOrdemServico().remover(funcionarioApagar);
        TransactionManager.commit();

    }

}
