/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.okaynet.andare.gui;

import br.com.okaynet.andare.bibliotecas.Util;
import br.com.okaynet.andare.conexao.Data;
import br.com.okaynet.andare.conexao.TransactionManager;
import br.com.okaynet.andare.daos.DaoUsuarios;
import br.com.okaynet.andare.model.Usuarios;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Erick
 */
public class JDialogPesquisaUsuarios extends javax.swing.JDialog {

    /**
     * Creates new form JDialogPesquisaCliente
     */
    private DefaultTableModel model;
    private String styleModelUsuarios[] = new String[]{"Usuário"};
    private List<Usuarios> usuarios;

    public JDialogPesquisaUsuarios(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        popularTabela();
        
                Usuarios autenticado = (Usuarios) Data.hash.get("usuario");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCliente = new javax.swing.JTable();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pesquisa de Funcionarios");
        setMinimumSize(new java.awt.Dimension(637, 430));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome", "RG", "CPF"
            }
        ));
        jScrollPane1.setViewportView(jTableCliente);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 590, 270));

        jTextFieldNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNomeKeyReleased(evt);
            }
        });
        getContentPane().add(jTextFieldNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 590, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel16.setText("Nome:");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jMenuBar1.setMinimumSize(new java.awt.Dimension(569, 310));
        jMenuBar1.setPreferredSize(new java.awt.Dimension(396, 31));
        jMenuBar1.setRequestFocusEnabled(false);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/108.png"))); // NOI18N
        jMenu1.setText("Editar");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/004.png"))); // NOI18N
        jMenu3.setText("Apagar");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        jMenu6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/010.png"))); // NOI18N
        jMenu6.setText("Voltar");
        jMenu6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu6MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu6);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        // TODO add your handling code here:
        if (jMenu3.isEnabled()) {
            Usuarios autenticado = (Usuarios) Data.hash.get("usuario");
            if (jTableCliente.getSelectedRow() > 0) {
                if (Util.mostraMensagemEmTela("Deseja realmente excluir?")) {
                    deletar();
                }
            } else if (jTableCliente.getSelectedRow() == 0 && !"Okaynet".equals(autenticado.getUsuario())) {
                JOptionPane.showMessageDialog(rootPane, "Você não tem acesso a este usuário");
            } else if (jTableCliente.getSelectedRow() == 0 && "Okaynet".equals(autenticado.getUsuario())) {
                JOptionPane.showMessageDialog(rootPane, "Impossivel excluir o usuário Administrador");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Nenhum registro selecionado!");
            }
        }
    }//GEN-LAST:event_jMenu3MouseClicked

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        if (jMenu1.isEnabled()) {
            Usuarios autenticado = (Usuarios) Data.hash.get("usuario");
            if (jTableCliente.getSelectedRow() > 0) {
                Data.hash.put("usuarioEditar", usuarios.get(jTableCliente.getSelectedRow()));
                Util.abrirDialogCentralizado(new JDialogCadastroUsuarioPopUp(null, rootPaneCheckingEnabled));
                popularTabela();
            } else if (jTableCliente.getSelectedRow() == 0 && !"Okaynet".equals(autenticado.getUsuario())) {
                JOptionPane.showMessageDialog(rootPane, "Você não tem acesso a este usuário");
            } else if (jTableCliente.getSelectedRow() == 0 && "Okaynet".equals(autenticado.getUsuario())) {
                Data.hash.put("usuarioEditar", usuarios.get(jTableCliente.getSelectedRow()));
                Util.abrirDialogCentralizado(new JDialogCadastroUsuarioPopUp(null, rootPaneCheckingEnabled));
                popularTabela();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Nenhum registro selecionado!");
            }
        }
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu6MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenu6MouseClicked

    private void jTextFieldNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeKeyReleased
        // TODO add your handling code here:
        obterPorNome();
    }//GEN-LAST:event_jTextFieldNomeKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogPesquisaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogPesquisaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogPesquisaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogPesquisaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogPesquisaUsuarios dialog = new JDialogPesquisaUsuarios(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCliente;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables

    private void deletar() {

        TransactionManager.beginTransaction();
        new DaoUsuarios().remover(usuarios.get(jTableCliente.getSelectedRow()));
        TransactionManager.commit();
        popularTabela();

    }

    private void popularTabela() {
        TransactionManager.beginTransaction();
        usuarios = new DaoUsuarios().listar("", "usuario");
        TransactionManager.commit();

        prencherPessoasTabela();
    }

    private void prencherPessoasTabela() {
        if (usuarios != null && !usuarios.isEmpty()) {
            model = new DefaultTableModel();
            model.setColumnIdentifiers(styleModelUsuarios);
            for (Usuarios usuario : usuarios) {
                model.addRow(new Object[]{usuario.getUsuario()});
            }
            jTableCliente.setModel(model);
        } else {
            model = new DefaultTableModel();
            model.setColumnIdentifiers(styleModelUsuarios);
            jTableCliente.setModel(model);
        }
    }

    private void obterPorNome() {
        TransactionManager.beginTransaction();
        usuarios = new DaoUsuarios().obterNome(jTextFieldNome.getText());
        TransactionManager.commit();
        prencherPessoasTabela();
    }
}
